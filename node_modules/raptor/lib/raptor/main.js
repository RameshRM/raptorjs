var loaded = false;


var nodePath = require('path');

var requireModuleFile = function(path) {
    require(nodePath.join(_coreModulesDir, path));
};

var _coreModulesDir = nodePath.join(__dirname, 'raptorjs_modules');

if (!nodePath.existsSync(_coreModulesDir)) {
    _coreModulesDir = nodePath.join(__dirname, '../../../../src/main/resources/META-INF/resources/raptorjs_modules');
    if (!nodePath.existsSync(_coreModulesDir)) {
        throw new Error("Core RaptorJS modules not found at either of the following locations:\n1) " + nodePath.join(__dirname, 'raptorjs_modules') + "\n2) " + _coreModulesDir);
    }
}

var addCoreModulesSearchPatryEntry = function(config) {

    var coreSearchPath = {
            type: "dir",
            path: _coreModulesDir
        };
    
    var resourcesConfig = config.resources;
    if (!resourcesConfig) {
        resourcesConfig = config.resources = {};
    }
    var searchPath = resourcesConfig.searchPath;
    
    if (!searchPath) {
        searchPath = resourcesConfig.searchPath = [];
    }
    
    searchPath.splice(0, 0, coreSearchPath);
};

var enableNodeExtensions = function(config) {
    
    
    var packagingConfig = config.packaging;
    if (!packagingConfig) {
        packagingConfig = config.packaging = {};
    }
    var enabledExtensions = packagingConfig.enabledExtensions;
    
    if (!enabledExtensions) {
        enabledExtensions = packagingConfig.enabledExtensions = [];
    }
    
    enabledExtensions.push("node");
    enabledExtensions.push("server");
};

exports.createRaptor = function(config) {
    
    if (!loaded) {
        require(nodePath.join(_coreModulesDir, "bootstrap/bootstrap_server.js"));
        raptorBootstrap.env = "node";
        raptorBootstrap.require = function(path) {
            require(nodePath.join(_coreModulesDir, path));
        };
        
        raptorBootstrap.load();
        loaded = true;
    }

    addCoreModulesSearchPatryEntry(config);
    enableNodeExtensions(config);
    raptor = raptorBuilder.createRaptor(config); 
    return raptor;
};